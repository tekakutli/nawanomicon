:PROPERTIES:
:ID:       f5d2ef09-1412-4955-a3c5-c22f6fff8d11
:END:
#+title: nerf
#+filetags: :nawanomicon:
- https://jonbarron.info/
- nerf reflections: https://youtu.be/qrdRH9irAlk
  - https://arxiv.org/pdf/2112.03907.pdf
* QUALITY
- [[https://twitter.com/_akhaliq/status/1665951945012412417][Neuralangelo]]: High-Fidelity Neural Surface Reconstruction (3d mesh augmented)
- [[https://twitter.com/_akhaliq/status/1668088138785341441][GANeRF]]: Leveraging Discriminators to Optimize Neural Radiance Fields
  - using gan, no floating ghost artifacts
* CREATING NERFS
** POSE PREDICTION
- [[https://melon-nerf.github.io/][MELON]]: NeRF with Unposed Images Using Equivalence Class Estimation (no poses)
- [[https://arxiv.org/abs/2211.16630][DINER]]: Depth-aware Image-based NEural Radiance fields
** FROM VIDEO
- [[https://arxiv.org/pdf/2112.01517.pdf][Efficient Neural]] Radiance Fields for Interactive Free-viewpoint Video (people)
- [[https://localrf.github.io/][Progressively Optimized]] Local Radiance Fields for Robust View Synthesis
  - turn video into nerf
    - [[https://twitter.com/liuziwei7/status/1640968549748584453][F2-NeRF]]: [[https://twitter.com/_akhaliq/status/1640891354149531648][Fast Neural]] Radiance Field Training with Free Camera Trajectories
- [[https://showlab.github.io/HOSNeRF/][HOSNeRF]]: Dynamic Human-Object-Scene Neural Radiance Fields from a Single Video
  - free 360% viewpoint
* OPERATING UPON
- ARF: Artistic Radiance Fields https://www.cs.cornell.edu/projects/arf/
  - nerf style transfer
- [[https://twitter.com/bilawalsidhu/status/1638919452392583169][Instruct-NeRF2NeRF]]: [[https://arxiv.org/pdf/2303.12789.pdf][Editing]] [[https://instruct-nerf2nerf.github.io/][3D]] Scenes with Instructions <<Instruct-NeRF2NeRF>>
  - training to NeRF in an iterative fashion
  - integrated to [[https://github.com/nerfstudio-project/nerfstudio][nerfstudio]]
* OUTPUT
** TEXTURE
- [[https://www.anjiecheng.me/TUVF][TUVF]] : Learning Generalizable Texture UV Radiance Fields
  - nerf baked to texture
- [[https://twitter.com/_akhaliq/status/1672061068276011008][Blended-NeRF]]: Zero-Shot Object Generation and Blending in Existing Neural Radiance Fields
  - change nerf objects, multiple nerf views
** FACE
- parent: [[id:8f3bb7b5-1212-458f-97d8-5458ed6ae466][face]]
- [[https://tobias-kirschstein.github.io/nersemble/][NeRSemble]]: Multi-view Radiance Field Reconstruction of Human Heads
  - nerf to texture to faces, very realistic (73 fps)
- faces generated no texture-sticking issue https://www.youtube.com/watch?v=j1ZY7LInN9g&t=272s
  - https://nvlabs.github.io/stylegan3/
  - https://github.com/rosinality/alias-free-gan-pytorch
** GRID
- city nerf: https://city-super.github.io/gridnerf/
- [[https://arxiv.org/abs/2304.03266][Neural Fields]] [[https://nv-tlabs.github.io/fegr/][meet]] Explicit Geometric Representation for Inverse Rendering of Urban Scenes
  - nerf inserting 3d things
- [[https://jonbarron.info/zipnerf/][Zip-NeRF]]: [[https://arxiv.org/abs/2304.06706][Anti-Aliased]] Grid-Based Neural Radiance Fields (house interiors)
- [[https://twitter.com/_akhaliq/status/1669381548011814930][Progressively]] Optimized Local Radiance Fields for Robust View Synthesis
  - dynamically allocate new local radiance
- (not nerf) [[https://twitter.com/_akhaliq/status/1669533542391357442][UrbanIR]]: Large-Scale Urban Scene Inverse Rendering from a Single Video (google maps)
* FASTNESS
- parent: [[id:ce14c053-d6bd-467d-84b6-11172ad3a8bc][computer_illumination]]
- NERF for real-time view synthesis https://arxiv.org/abs/2103.14645
- AdaNeRF https://arxiv.org/pdf/2207.10312.pdf (40 ms, two nerfs)
** GEOMETRY
- [[https://arxiv.org/abs/2212.01959][INGeo]]: Accelerating Instant Neural Scene Reconstruction with Noisy Geometry Priors, faster than Instant-NGP
  - [[https://nvlabs.github.io/instant-ngp/][instant-ngp]]: fractions of screen-space repeatedly, all neural primitives in seconds
    - cuda-less: https://github.com/taichi-dev/taichi https://github.com/Linyou/taichi-ngp-renderer
- [[https://github.com/sxyu/plenoctree][PlenOctree]]: https://github.com/sxyu/volrend  150 fps
  - [[https://jkulhanek.com/tetra-nerf/][Tetra-NeRF]]: [[https://arxiv.org/pdf/2304.09987.pdf][Representing]] Neural Radiance Fields Using Tetrahedra
*** HARMONICS
- Plenoxels (plenoptic voxels),  3D grid with spherical harmonics https://arxiv.org/pdf/2112.05131
  - [[https://arxiv.org/abs/2304.12670][Patch-based]] [[https://github.com/wyysf-98/Sin3DGen][3D]] [[https://twitter.com/weiyuli99072112/status/1651069926634053633][Natural]] [[https://weiyuli.xyz/Sin3DGen/][Scene]] Generation from a Single Example (3d patches as codebook)
    - content + structure separation
*** TRIANGLES
- MobileNERF = small neural network (Small MLP) for view dependant per pixel, deferred neural shader
  - https://youtu.be/ofVgAEb1FiE
  - https://youtu.be/nIqmuylmpFY
  - 10 minutes
  - [[https://arxiv.org/pdf/2208.00277v2.pdf][mobileNERF]] [[https://github.com/google-research/jax3d/tree/main/jax3d/projects/mobilenerf][(polygons, triangles)]] 124.3 fps
    - [[https://arxiv.org/abs/2303.08717][Re-ReND]]: Real-time Rendering of NeRFs across Devices (facebook)  329.6 fps
      - using rendering pipeline gpu geometry (like that one which used triangles)
